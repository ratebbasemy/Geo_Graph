{"version":3,"sources":["Geo.js","Ex1.js","Chargraph.js","App.js","index.js"],"names":["Geo","state","ip","city","region","country","loc","org","postal","timezone","readme","react_default","a","createElement","this","dist","google","props","zoom","style","width","height","initialCenter","lat","lng","key","position","onMouseover","alert","Component","GoogleApiWrapper","apiKey","Ex1","Chart","register","apply","Object","toConsumableArray","registerables","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","Chargraph","react_chartjs_2_dist","options","title","display","text","fontSize","legend","React","App","className","src_Chargraph","src_Ex1","src_Geo","createRoot","document","getElementById","render","src_App"],"mappings":"wOAIMA,6MAEJC,MAAM,CACJC,GAAM,iBACNC,KAAQ,gBACRC,OAAU,WACVC,QAAW,KACXC,IAAO,mBACPC,IAAO,+BACPC,OAAU,QACVC,SAAY,mBACZC,OAAU,yGAsBN,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAAkBC,KAAKb,MAAMC,IAC3BS,EAAAC,EAAAC,cAACE,EAAA,IAAD,CACJC,OAAQF,KAAKG,MAAMD,OACnBE,KAAM,EACNC,MAvBgB,CACdC,MAAO,QACPC,OAAQ,SAsBVC,cAAe,CAAEC,IAAK,QAASC,KAAM,SACjCb,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQU,IAAI,WACZC,SAAU,CAAEH,IAAK,QAASC,KAAM,QAEhCG,YAvBL,WAEEC,MAAM,8KAyBTjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCAjDQgB,aA2DHC,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEV9B,GC5CUgC,MAnBf,WAaI,OACIrB,EAAAC,EAAAC,cAAA,mCCbRoB,IAAMC,SAANC,MAAAF,IAAKG,OAAAC,EAAA,EAAAD,CAAaE,MAElB,IAAMrC,EAAQ,CACZsC,OAAQ,CAAC,UAAW,WAAY,QACvB,QAAS,OAClBC,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACbC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OA4BdC,mLApBX,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEF,KAAM5C,EACN+C,QAAS,CACPC,MAAM,CACJC,SAAQ,EACRC,KAAK,6BACLC,SAAS,IAEXC,OAAO,CACLH,SAAQ,EACRxB,SAAS,oBAfE4B,IAAMzB,WCUhB0B,MAnBf,WAEE,OACE5C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OACd7C,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAC4C,EAAD,MACD9C,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aCHS+C,qBAAWC,SAASC,eAAe,SAC3CC,OAEDpD,EAAAC,EAAAC,cAACmD,EAAD","file":"static/js/main.09ac7994.chunk.js","sourcesContent":["import React,{Component}from 'react';\r\nimport { Map,GoogleApiWrapper,Marker} from 'google-maps-react';\r\n\r\n\r\nclass Geo extends Component\r\n{\r\n  state={\r\n    \"ip\": \"161.185.160.93\",\r\n    \"city\": \"New York City\",\r\n    \"region\": \"New York\",\r\n    \"country\": \"US\",\r\n    \"loc\": \"40.7143,-74.0060\",\r\n    \"org\": \"AS22252 The City of New York\",\r\n    \"postal\": \"10004\",\r\n    \"timezone\": \"America/New_York\",\r\n    \"readme\": \"https://ipinfo.io/missingauth\"\r\n  }\r\n    render(){\r\n     \r\n      \r\n        const mapStyles = {\r\n            width: '100vw',\r\n            height: '100vh',\r\n          };\r\n\r\n         function getdata()\r\n         {\r\n           alert(\"ip: 161.185.160.93\"+\r\n           \",city: New York City\"+\r\n           \",region: New York\"+\r\n           \",country : US\"+\r\n           \",loc: 40.7143,-74.0060\"+\r\n           \",org: AS22252 The City of New York\"+\r\n           \",postal: 10004\"+\r\n           \",timezone : America/New_York\"\r\n           )\r\n         }\r\n        return(\r\n          <div>\r\n            <h1>this is my ip{this.state.ip}</h1>\r\n              <Map\r\n          google={this.props.google}\r\n          zoom={8}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 40.7143, lng: -74.0060}}>\r\n              <Marker key=\"marker_1\"\r\n              position={{ lat: 40.7143, lng: -74.0060}}\r\n\r\n              onMouseover={getdata}  />\r\n            </Map>\r\n        \r\n        \r\n        <div>\r\n          <h1>\r\n            he is very hot \r\n          </h1>\r\n        </div>\r\n          </div>\r\n        )\r\n        }\r\n};\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBuP95OYTE1R5MZNr5vdkoUy2_HYt1CvJY'\r\n  })(Geo);","import React from \"react\";\r\n//import { useState,useEffect } from \"react\";\r\nfunction Ex1()\r\n{\r\n   /* const [crupto,setCrypto]=useState({})\r\n    useEffect(()=>{\r\n        async function getdata()\r\n        {\r\n            const baseurl=\"https://api.coingecko.com/api/v3/exchange_rates\"\r\n            const response= await fetch(baseurl);\r\n            const cry= await response.json()\r\n            console.log(cry)\r\n        }\r\n    getdata();\r\n    },[])*/\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Ex1;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst state = {\r\n  labels: ['January', 'February', 'March',\r\n           'April', 'May'],\r\n  datasets: [\r\n    {\r\n      label: 'Rainfall',\r\n      backgroundColor: 'rgba(75,192,192,1)',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56]\r\n    }\r\n  ]\r\n}\r\n\r\nclass Chargraph  extends React.Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Bar\r\n          data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average Rainfall per month',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Chargraph;","//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Geo from './Geo';\n//import Ex from './Ex';\nimport Ex1 from './Ex1';\nimport Chargraph from './Chargraph';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     <h1>the geo graph testing </h1>\n     <Chargraph/>\n    <Ex1/>\n    <Geo/>\n    <br>\n    </br>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/\nimport React from 'react';\nimport {createRoot}  from 'react-dom/client';\nimport App from './App';\n\nconst root = createRoot(document.getElementById(\"root\"))\nroot.render\n  (\n    <App />\n  )\n"],"sourceRoot":""}